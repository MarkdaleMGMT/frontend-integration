{"version":3,"sources":["routing/auth.js","components/Panel/Panel.js","components/InputField/InputField.js","components/Button/Button.js","components/RegistrationLink/RegistrationLink.js","pages/LoginPanel/LoginPanel.js","components/SideBar.js","components/MainContainer.js","components/InvestmentPanel.js","pages/Dashboard/Dashboard.js","pages/SignUpPanel/SignUpPanel.js","pages/Forgot/Forgot.js","routing/PrivateRoutes.js","App.js","serviceWorker.js","index.js"],"names":["auth","Auth","Object","classCallCheck","this","isAuthenticated","cb","sessionData","JSON","parse","sessionStorage","getItem","username","Panel","react_default","a","createElement","className","id","props","children","Component","InputField","name","type","onChange","value","placeholder","required","Button","onClick","RegistrationLink","LoginPanel","_this","possibleConstructorReturn","getPrototypeOf","call","state","user","password","redirect","handleChange","bind","assertThisInitialized","handleClick","handleClearForm","e","_this2","target","setState","prevState","objectSpread","defineProperty","console","log","event","preventDefault","userData","fetch","url","method","mode","body","stringify","headers","Accept","Content-Type","then","response","status","json","data","loginDuration","Date","setTime","getTime","sessionTimeout","document","cookie","toGMTString","responseData","clam_balance","admin","level","ref_code","setItem","catch","err","components_Panel_Panel","components_InputField_InputField","title","components_Button_Button","react_router_dom","to","components_RegistrationLink_RegistrationLink","withRouter","SideBar","highlight","MainContainer","src_components_SideBar","sidebar","InvestmentPanel","Dashboard","components_MainContainer","components_InvestmentPanel","SignUpPanel","newUser","email","refCode","_this3","stringValidator","alert","validateEmail","Axios","res","found","users","forEach","code","error","test","string","trim","Forgot","PrivateRoute","_ref","component","rest","objectWithoutProperties","react_router","assign","render","getAuth","pathname","App","exact","path","pages_LoginPanel_LoginPanel","pages_SignUpPanel_SignUpPanel","pages_Forgot_Forgot","PrivateRoutes","Boolean","window","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8aeb00d0.chunk.js","sourcesContent":["class Auth {\r\n    constructor(){\r\n        this.isAuthenticated = false;\r\n    }\r\n\r\n    login(cb) {\r\n        var sessionData = JSON.parse(sessionStorage.getItem('data'));\r\n        if (sessionData.username !== \"\" || sessionData.username !== null) {\r\n            this.isAuthenticated = true;\r\n        }\r\n        else{\r\n            this.isAuthenticated = false;\r\n        }\r\n\r\n        cb();\r\n    }\r\n\r\n    getAuth() {\r\n        return this.isAuthenticated;\r\n    }\r\n\r\n\r\n    // logout(cb) {\r\n    //     this.authenticated = false;\r\n    //     this.admin = false;\r\n    //     sessionStorage.clear();\r\n    //     cb();\r\n    // }\r\n}\r\n\r\nexport default new Auth()","import React, { Component } from 'react';\r\nimport './Panel.css'\r\n\r\nclass Panel extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"card\" id=\"panel\">\r\n                <div className=\"card-body\" id=\"panel\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Panel","import React from 'react';\r\nimport './InputField.css'\r\n\r\nconst InputField = (props) => {\r\n    return (\r\n        <div className=\"form-group shadow\">\r\n            <input className=\"form-control\"\r\n                    id={props.name}\r\n                    name={props.name}\r\n                    type={props.type}\r\n                    onChange={props.onChange}\r\n                    value={props.value}\r\n                    placeholder={props.placeholder}\r\n                    required={true}       \r\n            />\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default InputField\r\n\r\n/*           <div className=\"form-group shadow\">\r\n<input \r\n    type={this.props.input.toLowerCase()} \r\n    id={this.props.input.toLowerCase()}\r\n    className=\"form-control\" \r\n    placeholder={this.props.input} \r\n    name={this.props.input.toLowerCase()}\r\n/>\r\n</div>*/","import React from 'react';\r\nimport './Button.css'\r\n\r\nconst Button = (props) => {\r\n        return (\r\n            <button \r\n                className=\"btn btn-rounded\"\r\n                onClick={props.onClick}\r\n                >\r\n                {props.children}\r\n            </button>\r\n        );\r\n}\r\n\r\nexport default Button","import React, { Component } from 'react'\r\n//import { Link } from 'react-router-dom';\r\nimport './RegistrationLink.css'\r\n\r\nclass RegistrationLink extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"links\">\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegistrationLink","import React, { Component } from 'react';\r\nimport { Link, withRouter} from 'react-router-dom';\r\nimport auth from \"../../routing/auth\"\r\n//import Axios from 'axios';\r\n\r\nimport Panel from '../../components/Panel/Panel';\r\nimport InputField from '../../components/InputField/InputField';\r\nimport Button from '../../components/Button/Button'\r\nimport RegistrationLink from '../../components/RegistrationLink/RegistrationLink';\r\n\r\nimport './LoginPanel.css';\r\n\r\nclass LoginPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user:{\r\n                username:'',\r\n                password: ''\r\n            },\r\n            redirect: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleClearForm = this.handleClearForm.bind(this);\r\n    }\r\n    handleChange(e) {\r\n        let value = e.target.value;\r\n        let name = e.target.name;\r\n        this.setState( prevState => {\r\n           return { \r\n              user : {\r\n                       ...prevState.user, [name]: value\r\n                      }\r\n           }\r\n        }, () => console.log(this.state.user)\r\n        );\r\n    }\r\n\r\n    handleClick(event) {\r\n        event.preventDefault();\r\n        let userData = this.state.user;\r\n        console.log(\"userData\", userData);\r\n\r\n        var url = \"http://138.197.175.92\"\r\n\r\n        fetch(url + \"/frontend/login\",{\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            body: JSON.stringify({\r\n                \"username\": userData.username,\r\n                \"password\": userData.password,\r\n            }), \r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            },\r\n        }).then(response => {\r\n            if (response.status === 200){\r\n                response.json().then(data => {\r\n                console.log(\"Successful\" + JSON.stringify(data));\r\n                \r\n                let sessionTimeout = 1; //hours\r\n                let loginDuration = new Date();\r\n                loginDuration.setTime(loginDuration.getTime() + (sessionTimeout * 60 * 60 * 1000));\r\n                document.cookie = \"CrewCentreSession=Valid; \" + loginDuration.toGMTString() + \"; path=/\";\r\n                let responseData = {\r\n                  username: userData.username,\r\n                  clam_balance: data.clam_balance,\r\n                  admin: data.level === 0 ? true : false,\r\n                  ref_code: data.ref_code\r\n                }\r\n                sessionStorage.setItem(\"data\", JSON.stringify(responseData));\r\n                console.log(\"NAVIGATING\")\r\n           //    auth.login(() => {\r\n             //      this.props.history.push(\"/dashboard\");\r\n             //  });\r\n                })\r\n            }\r\n            else{\r\n                console.log(\"Failed: \" + response.status)\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(\"error: \" + err);\r\n        })\r\n\r\n    }\r\n\r\n    handleClearForm(e) {\r\n        console.log(\"clear form\");\r\n        e.preventDefault();\r\n        this.setState({\r\n            user:{\r\n                username: '',\r\n                password: ''\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\" id=\"login-panel\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\" id=\"panel\">\r\n                        <Panel>\r\n                            <form>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <InputField type={\"text\"}\r\n                                                    title={\"Username\"}\r\n                                                    name={\"username\"}\r\n                                                    placeholder={\"Username\"}   \r\n                                                    value={this.state.user.username}                                           \r\n                                                    onChange={this.handleChange}                                     \r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                    <InputField type={\"password\"}\r\n                                                    title={\"Password\"}\r\n                                                    name={\"password\"}\r\n                                                    placeholder={\"Password\"}  \r\n                                                    value={this.state.user.password}                                                \r\n                                                    onChange={this.handleChange}                                                                           \r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\" id=\"button\">\r\n                                    <div className=\"col-4 mx-auto\">\r\n                                        <Button  onClick={this.handleClick}>\r\n                                            Login\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                            <div className=\"row\" id=\"registration-links\">\r\n                                <div className=\"col-6\" id=\"sign-up\">\r\n                                    <Link to=\"/signup\"><RegistrationLink>Sign Up</RegistrationLink></Link>\r\n                                </div>\r\n                                <div className=\"col-6\" id=\"forgot\">\r\n                                    <Link to=\"/forgot\"><RegistrationLink>Forgot</RegistrationLink></Link>\r\n                                </div>\r\n                            </div>\r\n                        </Panel>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(LoginPanel);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './SideBar.css'\r\n\r\nclass SideBar extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"col-sm-3 col-xl-2 sidebar\" id=\"sidebar\">\r\n                <ul className=\"nav nav-sidebar\">\r\n                    <li className={(this.props.highlight === \"Dashboard\" ? 'active' : '')}><Link to=\"/\">Dashboard <span className=\"sr-only\">(current)</span></Link></li>\r\n                </ul>\r\n                <ul className=\"nav nav-sidebar\">\r\n                    <li className={(this.props.highlight === \"Affiliates\" ? 'active' : '')}><Link to=\"/\">Affiliates</Link></li>\r\n                    <li className={(this.props.highlight === \"Dashboard\" ? 'active' : '')}><Link to=\"/\">Stats</Link></li>\r\n                    <li className={(this.props.highlight === \"Dashboard\" ? 'active' : '')}><Link to=\"/\">Exchange</Link></li>\r\n                </ul>\r\n                <ul className=\"nav nav-sidebar\">\r\n                    <li className={(this.props.highlight === \"Dashboard\" ? 'active' : '')}><Link to=\"/\">CLAM</Link></li>\r\n                    <li className={(this.props.highlight === \"Dashboard\" ? 'active' : '')}><Link to=\"/\">BTC</Link></li>\r\n                    <li className={(this.props.highlight === \"Dashboard\" ? 'active' : '')}><Link to=\"/\">CAD</Link></li>\r\n                    <li className={(this.props.highlight === \"Dashboard\" ? 'active' : '')}><Link to=\"/\">USD</Link></li>\r\n                    <li className={(this.props.highlight === \"Dashboard\" ? 'active' : '')}><Link to=\"/\">GOLD</Link></li>\r\n                </ul>\r\n                <ul className=\"nav nav-sidebar\">\r\n                    <li className={(this.props.highlight === \"Dashboard\" ? 'active' : '')}><Link to=\"/\">Contact</Link></li>\r\n                    <li className={(this.props.highlight === \"Dashboard\" ? 'active' : '')}><Link to=\"/\">Logout</Link></li>\r\n                    <li className={(this.props.highlight === \"Dashboard\" ? 'active' : '')}><Link to=\"/\">Refferal Code:</Link></li>\r\n                </ul>\r\n            </div>\r\n            /*\r\n        <aside className=\"col-12 col-md-2 p-0 \"id=\"side-bar\">\r\n            <nav className=\"navbar navbar-expand navbar-dark flex-md-column flex-row align-items-start py-2\" id=\"side-bar\">\r\n                <div className=\"collapse navbar-collapse\">\r\n                    <ul className=\"flex-md-column flex-row navbar-nav w-100 justify-content-between\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link pl-0 text-nowrap\" href=\"/\"><i className=\"fa fa-bullseye fa-fw\"></i> <span className=\"font-weight-bold\">Dashboard</span></a>\r\n                        </li>\r\n                    </ul>\r\n                    <ul className=\"flex-md-column flex-row navbar-nav w-100 justify-content-between\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link pl-0 text-nowrap\" href=\"/\"><i className=\"fa fa-bullseye fa-fw\"></i> <span className=\"font-weight-bold\">Affiliates</span></a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link To=\"/\" className=\"nav-link pl-0\"><i className=\"fa fa-heart-o fa-fw\"></i> <span className=\"d-none d-md-inline\">Stats</span></Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link pl-0\" href=\"/\"><i className=\"fa fa-book fa-fw\"></i> <span className=\"d-none d-md-inline\">Exchange</span></a>\r\n                        </li>\r\n                    </ul>\r\n                    <ul className=\"flex-md-column flex-row navbar-nav w-100 justify-content-between\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link pl-0 text-nowrap\" href=\"/\"><i className=\"fa fa-bullseye fa-fw\"></i> <span className=\"font-weight-bold\">CLAM</span></a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link To=\"/\" className=\"nav-link pl-0\"><i className=\"fa fa-heart-o fa-fw\"></i> <span className=\"d-none d-md-inline\">BTC</span></Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link pl-0\" href=\"/\"><i className=\"fa fa-book fa-fw\"></i> <span className=\"d-none d-md-inline\">CAD</span></a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link pl-0\" href=\"/\"><i className=\"fa fa-heart codeply fa-fw\"></i> <span className=\"d-none d-md-inline\">USD</span></a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link pl-0\" href=\"/\"><i className=\"fa fa-star codeply fa-fw\"></i> <span className=\"d-none d-md-inline\">GOLD</span></a>\r\n                        </li>\r\n                    </ul>\r\n                    <ul className=\"flex-md-column flex-row navbar-nav w-100 justify-content-between\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link pl-0 text-nowrap\" href=\"/\"><i className=\"fa fa-bullseye fa-fw\"></i> <span className=\"font-weight-bold\">Contact</span></a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link pl-0\"><i className=\"fa fa-heart-o fa-fw\"></i><span className=\"d-none d-md-inline\">Logout</span></Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link pl-0\" href=\"/\"><i className=\"fa fa-book fa-fw\"></i> <span className=\"d-none d-md-inline\">Refferal Code:(insert data)</span></a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </aside>\r\n        */\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideBar;","import React, { Component } from 'react';\r\nimport SideBar from './SideBar';\r\n\r\nclass MainContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"mainContainer\">\r\n                <div className=\"container-fluid min-vh-100\" id=\"main\">\r\n                    <div className=\"row\">\r\n                        <SideBar highlight={this.props.sidebar}/>\r\n                            {this.props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainContainer;\r\n\r\n","import React, { Component } from 'react';\r\n//import './InvestmentPanel.css'\r\n\r\nclass InvestmentPanel extends Component {\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card shadow p-3 mb-5 bg-white rounded\" id=\"investment-panel\">\r\n                <div className=\"card-body\" id=\"investment-panel\">\r\n                    <div className=\"table-responsive overview-table\">\r\n                        <table className=\"table table-striped\">\r\n                            <tbody>\r\n\r\n                                        <tr >\r\n                                            <td>investment</td>\r\n                                            <td>ivestment</td>\r\n                                            <td>ivestment</td>\r\n                                        </tr>\r\n                                        <tr >\r\n                                            <td>investment</td>\r\n                                            <td>ivestment</td>\r\n                                            <td>ivestment</td>\r\n                                        </tr>\r\n                                        <tr >\r\n                                            <td>investment</td>\r\n                                            <td>ivestment</td>\r\n                                            <td>ivestment</td>\r\n                                        </tr>\r\n                                        <tr >\r\n                                            <td>investment</td>\r\n                                            <td>ivestment</td>\r\n                                            <td>ivestment</td>\r\n                                        </tr>\r\n                                        <tr >\r\n                                            <td>Total</td>\r\n                                            <td></td>\r\n                                            <td>ivestment</td>\r\n                                        </tr>\r\n                                 \r\n                                {/* {this.state.projects.map((element, index) => {\r\n                                    return (\r\n                                        <tr key={element._id}>\r\n                                            <td>Project {element.ProjectName}</td>\r\n                                            <td>Active {moment().diff(moment([element.ProjectStartDate]), 'days')} Days</td>\r\n                                        </tr>\r\n                                    )\r\n                                })} */}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default InvestmentPanel","import React, { Component } from 'react';\r\nimport './Dashboard.css';\r\n//import { Link } from 'react-router-dom';\r\nimport MainContainer from '../../components/MainContainer'\r\nimport InvestmentPanel from '../../components/InvestmentPanel';\r\n\r\nclass Dashboard extends Component {\r\n\r\n    // componentDidMount(){\r\n    //     console.log(sessionStorage.getItem(\"data\").username);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <MainContainer sidebar=\"Dashboard\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                    <InvestmentPanel></InvestmentPanel>\r\n                    </div>\r\n                </div>\r\n            </MainContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nimport Panel from '../../components/Panel/Panel';\r\nimport InputField from '../../components/InputField/InputField';\r\nimport Button from '../../components/Button/Button'\r\nimport RegistrationLink from '../../components/RegistrationLink/RegistrationLink';\r\n\r\nimport './SignUpPanel.css';\r\n\r\nclass SignUpPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newUser: {\r\n                username: '',\r\n                password: '',\r\n                email: '',\r\n                refCode: ''\r\n            }\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleClearForm = this.handleClearForm.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n\r\n        let value = e.target.value;\r\n        let name = e.target.name;\r\n        this.setState(prevState => {\r\n            return {\r\n                newUser: {\r\n                    ...prevState.newUser, [name]: value\r\n                }\r\n            }\r\n        }, () => console.log(\"changed\" + JSON.stringify(this.state.newUser))\r\n        )\r\n\r\n    }\r\n\r\n    handleClick(event) {\r\n        event.preventDefault();\r\n        let userData = this.state.newUser;\r\n\r\n        if (this.stringValidator(userData.username) || this.stringValidator(userData.email)\r\n            || this.stringValidator(userData.password) || this.stringValidator(userData.refCode)) {\r\n            alert(\"Please fill in the form!\");\r\n        }\r\n        else if (this.validateEmail(this.state.newUser.email)) {\r\n            var url = \"http://138.197.175.92\"\r\n\r\n            Axios(url + '/frontend/all_users', {\r\n                method: \"GET\",\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }).then((res) => {\r\n\r\n                console.log(\"Successful\" + JSON.stringify(res));\r\n                //console.log(\"Successful\" + JSON.stringify(data.users[0]));\r\n                let found = false;\r\n\r\n                res.data.users.forEach((data) => {\r\n                    if (data.username === this.state.newUser.username) {\r\n                        found = true;\r\n                        alert(\"Username Taken\");\r\n                        return;\r\n\r\n                    }\r\n                    else if (data.email === this.state.newUser.email) {\r\n                        found = true;\r\n                        alert(\"Email Taken\");\r\n                        return;\r\n                    }\r\n                })\r\n\r\n                if (!found) {\r\n                    fetch(url + \"/frontend/signup\", {\r\n                        method: \"POST\",\r\n                        mode: \"cors\",\r\n                        body: JSON.stringify({\r\n                            \"username\": userData.username,\r\n                            \"email\": userData.email,\r\n                            \"password\": userData.password,\r\n                            \"code\": userData.refCode\r\n                        }), // string or object\r\n                        headers: {\r\n                            'Content-Type': \"application/json\"\r\n                        }\r\n                    }).then((res) => {\r\n                        if (res.status !== 200) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            res.json().then((data)=>{\r\n                                console.log(\"Successful\" + JSON.stringify(data));\r\n                            })\r\n                            //console.log(\"Successful\" + JSON.stringify(data.users[0]));\r\n                            alert(\"Verification e-mail sent. Check your inbox to confirm your account, (might go to your junk folder)\")\r\n                        };\r\n                    }).catch((err) => {\r\n                        console.log(err)\r\n                    })\r\n                }\r\n            }).catch((error) => {\r\n                    console.log(\"Unable to sign up \" + error);\r\n                })\r\n        }\r\n        else {\r\n            alert(\"Enter a valid email\");\r\n        }\r\n    }\r\n\r\n    //Resetting state to default\r\n    handleClearForm(e) {\r\n        console.log(\"clear form\");\r\n        e.preventDefault();\r\n        this.setState({\r\n            newUser: {\r\n                username: '',\r\n                password: '',\r\n                email: '',\r\n                refCode: ''\r\n            }\r\n        })\r\n    }\r\n\r\n    validateEmail(email) {\r\n        let re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        return re.test(email)\r\n    }\r\n\r\n    stringValidator(string) {\r\n        return string.trim() === \"\" || string == null || string === \"username\" || string === \"pass\" || string === \"code\"\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\" id=\"signup-panel\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\" id=\"panel\">\r\n                        <Panel>\r\n                            <form>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <InputField type={\"text\"}\r\n                                            title={\"Username\"}\r\n                                            name={\"username\"}\r\n                                            placeholder={\"Username\"}\r\n                                            value={this.state.newUser.username}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <InputField type={\"password\"}\r\n                                            title={\"Password\"}\r\n                                            name={\"password\"}\r\n                                            placeholder={\"Password\"}\r\n                                            value={this.state.newUser.password}\r\n                                            onChange={this.handleChange}\r\n\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <InputField type={\"email\"}\r\n                                            title={\"Email\"}\r\n                                            name={\"email\"}\r\n                                            placeholder={\"Email\"}\r\n                                            value={this.state.newUser.email}\r\n                                            onChange={this.handleChange}\r\n\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <InputField type={\"text\"}\r\n                                            title={\"Refferal Code\"}\r\n                                            name={\"refCode\"}\r\n                                            placeholder={\"Refferal Code\"}\r\n                                            value={this.state.newUser.refCode}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\" id=\"button\">\r\n                                    <div className=\"col-4 mx-auto\">\r\n                                        <Button onClick={this.handleClick}>\r\n                                            Sign Up\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                            <div className=\"row\" id=\"registration-links\">\r\n                                <div className=\"col-6\" id=\"login\">\r\n                                    <Link to=\"/\"><RegistrationLink>Login</RegistrationLink></Link>\r\n                                </div>\r\n                                <div className=\"col-6\" id=\"forgot\">\r\n                                    <Link to=\"/forgot\"><RegistrationLink>Forgot</RegistrationLink></Link>\r\n                                </div>\r\n                            </div>\r\n                        </Panel>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUpPanel;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nimport Panel from '../../components/Panel/Panel';\r\nimport InputField from '../../components/InputField/InputField';\r\nimport Button from '../../components/Button/Button'\r\nimport RegistrationLink from '../../components/RegistrationLink/RegistrationLink';\r\n\r\nimport './Forgot.css';\r\n\r\nclass Forgot extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                email: ''\r\n            }\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleClearForm = this.handleClearForm.bind(this);\r\n    }\r\n    handleChange(e) {\r\n        let value = e.target.value;\r\n        let name = e.target.name;\r\n        this.setState(prevState => {\r\n            return {\r\n                user: {\r\n                    ...prevState.user, [name]: value\r\n                }\r\n            }\r\n        }, () => console.log(this.state.user)\r\n        )\r\n    }\r\n\r\n    validateEmail(email) {\r\n        let re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        return re.test(email)\r\n    }\r\n\r\n    handleClick(event) {\r\n        event.preventDefault();\r\n        //  let userData = this.state.user;\r\n        var url = \"http://138.197.175.92\"\r\n        \r\n        if (this.validateEmail(this.state.user.email)) {\r\n\r\n            Axios(url + \"/frontend/reset_password\", {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                body: JSON.stringify({\r\n                    \"email\": this.state.user.email\r\n                }), // string or object\r\n                headers: {\r\n                    'Content-Type': \"application/json\"\r\n                }\r\n            }).then((response) => {\r\n                if (response.status !== 200){\r\n                    console.log(\"Email does not exist\");\r\n                    alert(\"Email does not exist\");            }\r\n                else{\r\n                    console.log(\"success: \" + JSON.stringify(response));\r\n                    alert(\"Verification e-mail sent. Check your inbox to confirm your account, (might go to your junk folder)\")\r\n                }\r\n            }).catch((error) => {\r\n                console.log(error);\r\n                alert(\"Cannot reest password\")\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Email in incorrect format!\");\r\n        }\r\n\r\n    }\r\n\r\n    handleClearForm(e) {\r\n        console.log(\"clear form\");\r\n        e.preventDefault();\r\n        this.setState({\r\n            user: {\r\n                email: ''\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\" id=\"forgot-panel\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\" id=\"panel\">\r\n                        <Panel>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <InputField type={\"email\"}\r\n                                        title={\"Email\"}\r\n                                        name={\"email\"}\r\n                                        placeholder={\"Email\"}\r\n                                        value={this.state.user.email}\r\n                                        onChange={this.handleChange}\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" id=\"button\">\r\n                                <div className=\"col-6 mx-auto\">\r\n                                    <Button onClick={this.handleClick}>\r\n                                        Reset Pasword\r\n                                        </Button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" id=\"registration-links\">\r\n                                <div className=\"col-6\" id=\"login\">\r\n                                    <Link to=\"/\"><RegistrationLink>Login</RegistrationLink></Link>\r\n                                </div>\r\n                                <div className=\"col-6\" id=\"sign-up\">\r\n                                    <Link to=\"/signup\"><RegistrationLink>Sign Up</RegistrationLink></Link>\r\n                                </div>\r\n                            </div>\r\n                        </Panel>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Forgot;","import { Route, Redirect } from 'react-router-dom';\r\nimport React from 'react';\r\nimport auth from './auth';\r\n\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route {...rest} render={props =>\r\n    auth.getAuth() === true ? (<Component {...props} />) : (<Redirect to={{pathname: \"/dashboard\"}}/>)\r\n  }\r\n  />);\r\n\r\n\r\nexport default PrivateRoute;","import { Route, Switch} from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport LoginPanel from './pages/LoginPanel/LoginPanel'\r\nimport Dashboard from './pages//Dashboard/Dashboard'\r\nimport SignUpPanel from './pages/SignUpPanel/SignUpPanel';\r\nimport Forgot from './pages/Forgot/Forgot';\r\nimport PrivateRoute from './routing/PrivateRoutes';\r\n\r\nclass App extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path='/' render={() => (\r\n          <LoginPanel />\r\n        )} />\r\n  \r\n        <Route exact path='/signup' render={() => (\r\n          <SignUpPanel />\r\n        )} />\r\n        <Route exact path='/forgot' render={() => (\r\n          <Forgot />\r\n        )}/>\r\n        <PrivateRoute exact path='/dashboard' component={Dashboard}/>\r\n        <Route render={() => (\r\n          <h1>Not Found</h1>\r\n        )} />\r\n      </Switch>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>    \r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}