{"version":3,"sources":["routing/auth.js","components/Panel/Panel.js","components/InputField/InputField.js","components/Button/Button.js","components/RegistrationLink/RegistrationLink.js","pages/LoginPanel/LoginPanel.js","components/SideBar.js","components/MainContainer.js","components/InvestmentPanel.js","pages/Dashboard/Dashboard.js","pages/SignUpPanel/SignUpPanel.js","pages/Forgot/Forgot.js","routing/PrivateRoutes.js","App.js","serviceWorker.js","index.js"],"names":["auth","Auth","Object","classCallCheck","this","isAuthenticated","cb","sessionData","JSON","parse","sessionStorage","getItem","username","Panel","react_default","a","createElement","className","id","props","children","Component","InputField","name","type","onChange","value","placeholder","required","Button","onClick","RegistrationLink","LoginPanel","_this","possibleConstructorReturn","getPrototypeOf","call","state","user","password","redirect","handleChange","bind","assertThisInitialized","handleClick","handleClearForm","e","_this2","target","setState","prevState","objectSpread","defineProperty","console","log","event","_this3","preventDefault","userData","fetch","url","method","mode","body","stringify","headers","Accept","Content-Type","then","response","status","json","data","loginDuration","Date","setTime","getTime","sessionTimeout","document","cookie","toGMTString","responseData","clam_balance","admin","level","ref_code","setItem","login","history","push","catch","err","components_Panel_Panel","components_InputField_InputField","title","components_Button_Button","react_router_dom","to","components_RegistrationLink_RegistrationLink","withRouter","SideBar","highlight","MainContainer","src_components_SideBar","sidebar","InvestmentPanel","_isMounted","investments","Dashboard","components_MainContainer","components_InvestmentPanel","SignUpPanel","newUser","email","refCode","stringValidator","alert","validateEmail","Axios","res","found","users","forEach","code","error","test","string","trim","Forgot","PrivateRoute","_ref","component","rest","objectWithoutProperties","react_router","assign","render","App","exact","path","pages_LoginPanel_LoginPanel","pages_SignUpPanel_SignUpPanel","pages_Forgot_Forgot","PrivateRoutes","Boolean","window","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4cA8BeA,EAAA,eA7BX,SAAAC,IAAcC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GACVG,KAAKC,iBAAkB,oDAGrBC,GACF,IAAIC,EAAcC,KAAKC,MAAMC,eAAeC,QAAQ,SACvB,KAAzBJ,EAAYK,UAA4C,OAAzBL,EAAYK,SAC3CR,KAAKC,iBAAkB,EAGvBD,KAAKC,iBAAkB,EAG3BC,sCAIA,OAAOF,KAAKC,0BCFLQ,0LAXP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,GAAG,SACrBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,GAAG,SACzBd,KAAKe,MAAMC,kBALZC,cCiBLC,SAjBI,SAACH,GAChB,OACIL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eACTC,GAAIC,EAAMI,KACVA,KAAMJ,EAAMI,KACZC,KAAML,EAAMK,KACZC,SAAUN,EAAMM,SAChBC,MAAOP,EAAMO,MACbC,YAAaR,EAAMQ,YACnBC,UAAU,OCCfC,SAXA,SAACV,GACR,OACIL,EAAAC,EAAAC,cAAA,UACIC,UAAU,kBACVa,QAASX,EAAMW,SAEdX,EAAMC,YCKRW,0LARP,OACIjB,EAAAC,EAAAC,cAAA,OAAKE,GAAG,SACHd,KAAKe,MAAMC,iBAJGC,cCQzBW,qBACF,SAAAA,EAAYb,GAAO,IAAAc,EAAA,OAAA/B,OAAAC,EAAA,EAAAD,CAAAE,KAAA4B,IACfC,EAAA/B,OAAAgC,EAAA,EAAAhC,CAAAE,KAAAF,OAAAiC,EAAA,EAAAjC,CAAA8B,GAAAI,KAAAhC,KAAMe,KACDkB,MAAQ,CACTC,KAAK,CACD1B,SAAS,GACT2B,SAAU,IAEdC,UAAU,GAGdP,EAAKQ,aAAeR,EAAKQ,aAAaC,KAAlBxC,OAAAyC,EAAA,EAAAzC,CAAA+B,IACpBA,EAAKW,YAAcX,EAAKW,YAAYF,KAAjBxC,OAAAyC,EAAA,EAAAzC,CAAA+B,IACnBA,EAAKY,gBAAkBZ,EAAKY,gBAAgBH,KAArBxC,OAAAyC,EAAA,EAAAzC,CAAA+B,IAZRA,4EAcNa,GAAG,IAAAC,EAAA3C,KACRsB,EAAQoB,EAAEE,OAAOtB,MACjBH,EAAOuB,EAAEE,OAAOzB,KACpBnB,KAAK6C,SAAU,SAAAC,GACZ,MAAO,CACJZ,KAAIpC,OAAAiD,EAAA,EAAAjD,CAAA,GACQgD,EAAUZ,KADlBpC,OAAAkD,EAAA,EAAAlD,CAAA,GACyBqB,EAAOG,MAGvC,kBAAM2B,QAAQC,IAAIP,EAAKV,MAAMC,4CAIxBiB,GAAO,IAAAC,EAAApD,KACfmD,EAAME,iBACN,IAAIC,EAAWtD,KAAKiC,MAAMC,KAC1Be,QAAQC,IAAI,WAAYI,GAIxBC,MAAMC,uCAAwB,CAC1BC,OAAQ,OACRC,KAAM,OACNC,KAAMvD,KAAKwD,UAAU,CACjBpD,SAAY8C,EAAS9C,SACrB2B,SAAYmB,EAASnB,WAEzB0B,QAAS,CACPC,OAAU,mBACVC,eAAgB,sBAEnBC,KAAK,SAAAC,GACoB,MAApBA,EAASC,OACTD,EAASE,OAAOH,KAAK,SAAAI,GACrBnB,QAAQC,IAAI,aAAe9C,KAAKwD,UAAUQ,IAE1C,IACIC,EAAgB,IAAIC,KACxBD,EAAcE,QAAQF,EAAcG,UAAaC,MACjDC,SAASC,OAAS,4BAA8BN,EAAcO,cAAgB,WAC9E,IAAIC,EAAe,CACjBrE,SAAU8C,EAAS9C,SACnBsE,aAAcV,EAAKU,aACnBC,MAAsB,IAAfX,EAAKY,MACZC,SAAUb,EAAKa,UAEjB3E,eAAe4E,QAAQ,OAAQ9E,KAAKwD,UAAUiB,IAC9C5B,QAAQC,IAAI,cACbtD,EAAKuF,MAAM,WACP/B,EAAKrC,MAAMqE,QAAQC,KAAK,kBAK3BpC,QAAQC,IAAI,WAAae,EAASC,UAEvCoB,MAAM,SAACC,GACNtC,QAAQC,IAAI,UAAYqC,6CAKhB7C,GACZO,QAAQC,IAAI,cACZR,EAAEW,iBACFrD,KAAK6C,SAAS,CACVX,KAAK,CACD1B,SAAU,GACV2B,SAAU,uCAMlB,OACIzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBC,GAAG,eAChCJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASC,GAAG,SACvBJ,EAAAC,EAAAC,cAAC4E,EAAD,KACI9E,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAC6E,EAAD,CAAYrE,KAAM,OACNsE,MAAO,WACPvE,KAAM,WACNI,YAAa,WACbD,MAAOtB,KAAKiC,MAAMC,KAAK1B,SACvBa,SAAUrB,KAAKqC,iBAInC3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAC6E,EAAD,CAAYrE,KAAM,WACFsE,MAAO,WACPvE,KAAM,WACNI,YAAa,WACbD,MAAOtB,KAAKiC,MAAMC,KAAKC,SACvBd,SAAUrB,KAAKqC,iBAInC3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMC,GAAG,UACpBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAC+E,EAAD,CAASjE,QAAS1B,KAAKwC,aAAvB,YAMZ9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMC,GAAG,sBACpBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQC,GAAG,WACtBJ,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAMC,GAAG,WAAUnF,EAAAC,EAAAC,cAACkF,EAAD,kBAEvBpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQC,GAAG,UACtBJ,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAMC,GAAG,WAAUnF,EAAAC,EAAAC,cAACkF,EAAD,6BAlI9B7E,cA6IV8E,cAAWnE,GCtHXoE,gMA5BP,OACItF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BC,GAAG,WAC1CJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAqC,cAAzBb,KAAKe,MAAMkF,UAA4B,SAAW,IAAKvF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAMC,GAAG,KAAT,aAAuBnF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,gBAElGH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAqC,eAAzBb,KAAKe,MAAMkF,UAA6B,SAAW,IAAKvF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAMC,GAAG,KAAT,eACxEnF,EAAAC,EAAAC,cAAA,MAAIC,UAAqC,UAAzBb,KAAKe,MAAMkF,UAAwB,SAAW,IAAKvF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAMC,GAAG,KAAT,UACnEnF,EAAAC,EAAAC,cAAA,MAAIC,UAAqC,aAAzBb,KAAKe,MAAMkF,UAA2B,SAAW,IAAKvF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAMC,GAAG,KAAT,cAE1EnF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAqC,SAAzBb,KAAKe,MAAMkF,UAAuB,SAAW,IAAKvF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAMC,GAAG,KAAT,SAClEnF,EAAAC,EAAAC,cAAA,MAAIC,UAAqC,QAAzBb,KAAKe,MAAMkF,UAAsB,SAAW,IAAKvF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAMC,GAAG,KAAT,QACjEnF,EAAAC,EAAAC,cAAA,MAAIC,UAAqC,QAAzBb,KAAKe,MAAMkF,UAAsB,SAAW,IAAKvF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAMC,GAAG,KAAT,QACjEnF,EAAAC,EAAAC,cAAA,MAAIC,UAAqC,QAAzBb,KAAKe,MAAMkF,UAAsB,SAAW,IAAKvF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAMC,GAAG,KAAT,QACjEnF,EAAAC,EAAAC,cAAA,MAAIC,UAAqC,SAAzBb,KAAKe,MAAMkF,UAAuB,SAAW,IAAKvF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAMC,GAAG,KAAT,UAEtEnF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAqC,YAAzBb,KAAKe,MAAMkF,UAA0B,SAAW,IAAKvF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAMC,GAAG,KAAT,YACrEnF,EAAAC,EAAAC,cAAA,MAAIC,UAAqC,WAAzBb,KAAKe,MAAMkF,UAAyB,SAAW,IAAKvF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAMC,GAAG,KAAT,WACpEnF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAMC,GAAG,KAAT,4BAtBF5E,cCaPiF,mLAbP,OACIxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BAA6BC,GAAG,QAC3CJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACuF,EAAD,CAASF,UAAWjG,KAAKe,MAAMqF,UAC1BpG,KAAKe,MAAMC,mBAPZC,aCiFboF,cA9EX,SAAAA,EAAYtF,GAAO,IAAAc,EAAA,OAAA/B,OAAAC,EAAA,EAAAD,CAAAE,KAAAqG,IACfxE,EAAA/B,OAAAgC,EAAA,EAAAhC,CAAAE,KAAAF,OAAAiC,EAAA,EAAAjC,CAAAuG,GAAArE,KAAAhC,KAAMe,KAHVuF,YAAa,EAKTzE,EAAKI,MAAQ,CACTsE,YAAa,IAJF1E,wEA8Bf,OACInB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mDAAmDC,GAAG,oBACjEJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,GAAG,oBAC1BJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,sBAEJF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,sBAEJF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,sBAEJF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,sBAEJF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,kCA9DNK,aCsBfuF,mLAZP,OACI9F,EAAAC,EAAAC,cAAC6F,EAAD,CAAeL,QAAQ,aACnB1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAC8F,EAAD,gBAXIzF,8BCoNT0F,qBA9MX,SAAAA,EAAY5F,GAAO,IAAAc,EAAA,OAAA/B,OAAAC,EAAA,EAAAD,CAAAE,KAAA2G,IACf9E,EAAA/B,OAAAgC,EAAA,EAAAhC,CAAAE,KAAAF,OAAAiC,EAAA,EAAAjC,CAAA6G,GAAA3E,KAAAhC,KAAMe,KACDkB,MAAQ,CACT2E,QAAS,CACLpG,SAAU,GACV2B,SAAU,GACV0E,MAAO,GACPC,QAAS,KAIjBjF,EAAKQ,aAAeR,EAAKQ,aAAaC,KAAlBxC,OAAAyC,EAAA,EAAAzC,CAAA+B,IACpBA,EAAKW,YAAcX,EAAKW,YAAYF,KAAjBxC,OAAAyC,EAAA,EAAAzC,CAAA+B,IACnBA,EAAKY,gBAAkBZ,EAAKY,gBAAgBH,KAArBxC,OAAAyC,EAAA,EAAAzC,CAAA+B,IAbRA,4EAgBNa,GAAG,IAAAC,EAAA3C,KAERsB,EAAQoB,EAAEE,OAAOtB,MACjBH,EAAOuB,EAAEE,OAAOzB,KACpBnB,KAAK6C,SAAS,SAAAC,GACV,MAAO,CACH8D,QAAQ9G,OAAAiD,EAAA,EAAAjD,CAAA,GACDgD,EAAU8D,QADV9G,OAAAkD,EAAA,EAAAlD,CAAA,GACoBqB,EAAOG,MAGvC,kBAAM2B,QAAQC,IAAI,UAAY9C,KAAKwD,UAAUjB,EAAKV,MAAM2E,gDAKnDzD,GAAO,IAAAC,EAAApD,KACfmD,EAAME,iBACN,IAAIC,EAAWtD,KAAKiC,MAAM2E,QAE1B,GAAI5G,KAAK+G,gBAAgBzD,EAAS9C,WAAaR,KAAK+G,gBAAgBzD,EAASuD,QACtE7G,KAAK+G,gBAAgBzD,EAASnB,WAAanC,KAAK+G,gBAAgBzD,EAASwD,SAC5EE,MAAM,iCAEL,GAAIhH,KAAKiH,cAAcjH,KAAKiC,MAAM2E,QAAQC,OAAQ,CACnD,IAAIrD,EAAM,wBAEV0D,IAAM1D,EAAM,sBAAuB,CAC/BC,OAAQ,MACRC,KAAM,OACNG,QAAS,CACLC,OAAU,mBACVC,eAAgB,sBAErBC,KAAK,SAACmD,GAELlE,QAAQC,IAAI,aAAe9C,KAAKwD,UAAUuD,IAE1C,IAAIC,GAAQ,EAEZD,EAAI/C,KAAKiD,MAAMC,QAAQ,SAAClD,GACpB,OAAIA,EAAK5D,WAAa4C,EAAKnB,MAAM2E,QAAQpG,UACrC4G,GAAQ,OACRJ,MAAM,mBAID5C,EAAKyC,QAAUzD,EAAKnB,MAAM2E,QAAQC,OACvCO,GAAQ,OACRJ,MAAM,qBAFL,IAOJI,GACD7D,MAAMC,EAAM,mBAAoB,CAC5BC,OAAQ,OACRC,KAAM,OACNC,KAAMvD,KAAKwD,UAAU,CACjBpD,SAAY8C,EAAS9C,SACrBqG,MAASvD,EAASuD,MAClB1E,SAAYmB,EAASnB,SACrBoF,KAAQjE,EAASwD,UAErBjD,QAAS,CACLE,eAAgB,sBAErBC,KAAK,SAACmD,GACc,MAAfA,EAAIjD,SAIJiD,EAAIhD,OAAOH,KAAK,SAACI,GACbnB,QAAQC,IAAI,aAAe9C,KAAKwD,UAAUQ,MAG9C4C,MAAM,yGAEX1B,MAAM,SAACC,GACNtC,QAAQC,IAAIqC,OAGrBD,MAAM,SAACkC,GACFvE,QAAQC,IAAI,qBAAuBsE,UAI3CR,MAAM,+DAKEtE,GACZO,QAAQC,IAAI,cACZR,EAAEW,iBACFrD,KAAK6C,SAAS,CACV+D,QAAS,CACLpG,SAAU,GACV2B,SAAU,GACV0E,MAAO,GACPC,QAAS,4CAKPD,GAEV,MADS,0IACCY,KAAKZ,2CAGHa,GACZ,MAAyB,KAAlBA,EAAOC,QAA2B,MAAVD,GAA6B,aAAXA,GAAoC,SAAXA,GAAgC,SAAXA,mCAI/F,OACIhH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBC,GAAG,gBAChCJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASC,GAAG,SACvBJ,EAAAC,EAAAC,cAAC4E,EAAD,KACI9E,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAC6E,EAAD,CAAYrE,KAAM,OACdsE,MAAO,WACPvE,KAAM,WACNI,YAAa,WACbD,MAAOtB,KAAKiC,MAAM2E,QAAQpG,SAC1Ba,SAAUrB,KAAKqC,iBAI3B3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAC6E,EAAD,CAAYrE,KAAM,WACdsE,MAAO,WACPvE,KAAM,WACNI,YAAa,WACbD,MAAOtB,KAAKiC,MAAM2E,QAAQzE,SAC1Bd,SAAUrB,KAAKqC,iBAK3B3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAC6E,EAAD,CAAYrE,KAAM,QACdsE,MAAO,QACPvE,KAAM,QACNI,YAAa,QACbD,MAAOtB,KAAKiC,MAAM2E,QAAQC,MAC1BxF,SAAUrB,KAAKqC,iBAK3B3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAC6E,EAAD,CAAYrE,KAAM,OACdsE,MAAO,gBACPvE,KAAM,UACNI,YAAa,gBACbD,MAAOtB,KAAKiC,MAAM2E,QAAQE,QAC1BzF,SAAUrB,KAAKqC,iBAI3B3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMC,GAAG,UACpBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAC+E,EAAD,CAAQjE,QAAS1B,KAAKwC,aAAtB,cAMZ9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMC,GAAG,sBACpBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQC,GAAG,SACtBJ,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAMC,GAAG,KAAInF,EAAAC,EAAAC,cAACkF,EAAD,gBAEjBpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQC,GAAG,UACtBJ,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAMC,GAAG,WAAUnF,EAAAC,EAAAC,cAACkF,EAAD,6BApM7B7E,cCsHX2G,qBApHX,SAAAA,EAAY7G,GAAO,IAAAc,EAAA,OAAA/B,OAAAC,EAAA,EAAAD,CAAAE,KAAA4H,IACf/F,EAAA/B,OAAAgC,EAAA,EAAAhC,CAAAE,KAAAF,OAAAiC,EAAA,EAAAjC,CAAA8H,GAAA5F,KAAAhC,KAAMe,KACDkB,MAAQ,CACTC,KAAM,CACF2E,MAAO,KAIfhF,EAAKQ,aAAeR,EAAKQ,aAAaC,KAAlBxC,OAAAyC,EAAA,EAAAzC,CAAA+B,IACpBA,EAAKW,YAAcX,EAAKW,YAAYF,KAAjBxC,OAAAyC,EAAA,EAAAzC,CAAA+B,IACnBA,EAAKY,gBAAkBZ,EAAKY,gBAAgBH,KAArBxC,OAAAyC,EAAA,EAAAzC,CAAA+B,IAVRA,4EAYNa,GAAG,IAAAC,EAAA3C,KACRsB,EAAQoB,EAAEE,OAAOtB,MACjBH,EAAOuB,EAAEE,OAAOzB,KACpBnB,KAAK6C,SAAS,SAAAC,GACV,MAAO,CACHZ,KAAKpC,OAAAiD,EAAA,EAAAjD,CAAA,GACEgD,EAAUZ,KADbpC,OAAAkD,EAAA,EAAAlD,CAAA,GACoBqB,EAAOG,MAGpC,kBAAM2B,QAAQC,IAAIP,EAAKV,MAAMC,8CAItB2E,GAEV,MADS,0IACCY,KAAKZ,uCAGP1D,GACRA,EAAME,iBAIFrD,KAAKiH,cAAcjH,KAAKiC,MAAMC,KAAK2E,OAEnCK,IAAM1D,gDAAkC,CACpCC,OAAQ,OACRC,KAAM,OACNC,KAAMvD,KAAKwD,UAAU,CACjBiD,MAAS7G,KAAKiC,MAAMC,KAAK2E,QAE7BhD,QAAS,CACLE,eAAgB,sBAErBC,KAAK,SAACC,GACmB,MAApBA,EAASC,QACTjB,QAAQC,IAAI,wBACZ8D,MAAM,0BAEN/D,QAAQC,IAAI,YAAc9C,KAAKwD,UAAUK,IACzC+C,MAAM,yGAEX1B,MAAM,SAACkC,GACNvE,QAAQC,IAAIsE,GACZR,MAAM,2BAIVA,MAAM,sEAKEtE,GACZO,QAAQC,IAAI,cACZR,EAAEW,iBACFrD,KAAK6C,SAAS,CACVX,KAAM,CACF2E,MAAO,uCAMf,OACInG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBC,GAAG,gBAChCJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASC,GAAG,SACvBJ,EAAAC,EAAAC,cAAC4E,EAAD,KACI9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAC6E,EAAD,CAAYrE,KAAM,QACdsE,MAAO,QACPvE,KAAM,QACNI,YAAa,QACbD,MAAOtB,KAAKiC,MAAMC,KAAK2E,MACvBxF,SAAUrB,KAAKqC,iBAK3B3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMC,GAAG,UACpBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAC+E,EAAD,CAAQjE,QAAS1B,KAAKwC,aAAtB,mBAKR9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMC,GAAG,sBACpBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQC,GAAG,SACtBJ,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAMC,GAAG,KAAInF,EAAAC,EAAAC,cAACkF,EAAD,gBAEjBpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQC,GAAG,WACtBJ,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAMC,GAAG,WAAUnF,EAAAC,EAAAC,cAACkF,EAAD,8BA3GlC7E,sBCIN4G,EAVM,SAAAC,GAAuC,IAAzB7G,EAAyB6G,EAApCC,UAAyBC,EAAWlI,OAAAmI,EAAA,EAAAnI,CAAAgI,EAAA,eAC1D,OACEpH,EAAAC,EAAAC,cAACsH,EAAA,EAADpI,OAAAqI,OAAA,GAAWH,EAAX,CAAiBI,OAAQ,SAACrH,GAAD,OACE,IAAzBnB,EAAKK,gBACDS,EAAAC,EAAAC,cAACK,EAAcF,GACfL,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAUrC,GAAG,WC0BRwC,mLAzBX,OACE3H,EAAAC,EAAAC,cAACsH,EAAA,EAAD,KACExH,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOI,OAAK,EAACC,KAAK,IAAIH,OAAQ,kBAC5B1H,EAAAC,EAAAC,cAAC4H,EAAD,SAGF9H,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOI,OAAK,EAACC,KAAK,UAAUH,OAAQ,kBAClC1H,EAAAC,EAAAC,cAAC6H,EAAD,SAEF/H,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOI,OAAK,EAACC,KAAK,UAAUH,OAAQ,kBAClC1H,EAAAC,EAAAC,cAAC8H,EAAD,SAEHhI,EAAAC,EAAAC,cAAC+H,EAAD,CAAcL,OAAK,EAACC,KAAK,aAAaR,UAAWvB,IAIhD9F,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOE,OAAQ,kBACb1H,EAAAC,EAAAC,cAAA,kCApBQK,aCIE2H,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASb,OACL1H,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACIlF,EAAAC,EAAAC,cAACsI,EAAD,OAENxE,SAASyE,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtF,KAAK,SAAAuF,GACjCA,EAAaC","file":"static/js/main.52ee8d89.chunk.js","sourcesContent":["class Auth {\r\n    constructor(){\r\n        this.isAuthenticated = false;\r\n    }\r\n\r\n    login(cb) {\r\n        var sessionData = JSON.parse(sessionStorage.getItem('data'));\r\n        if (sessionData.username !== \"\" || sessionData.username !== null) {\r\n            this.isAuthenticated = true;\r\n        }\r\n        else{\r\n            this.isAuthenticated = false;\r\n        }\r\n\r\n        cb();\r\n    }\r\n\r\n    getAuth() {\r\n        return this.isAuthenticated;\r\n    }\r\n\r\n\r\n    // logout(cb) {\r\n    //     this.authenticated = false;\r\n    //     this.admin = false;\r\n    //     sessionStorage.clear();\r\n    //     cb();\r\n    // }\r\n}\r\n\r\nexport default new Auth()","import React, { Component } from 'react';\r\nimport './Panel.css'\r\n\r\nclass Panel extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"card\" id=\"panel\">\r\n                <div className=\"card-body\" id=\"panel\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Panel","import React from 'react';\r\nimport './InputField.css'\r\n\r\nconst InputField = (props) => {\r\n    return (\r\n        <div className=\"form-group shadow\">\r\n            <input className=\"form-control\"\r\n                    id={props.name}\r\n                    name={props.name}\r\n                    type={props.type}\r\n                    onChange={props.onChange}\r\n                    value={props.value}\r\n                    placeholder={props.placeholder}\r\n                    required={true}       \r\n            />\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default InputField\r\n\r\n/*           <div className=\"form-group shadow\">\r\n<input \r\n    type={this.props.input.toLowerCase()} \r\n    id={this.props.input.toLowerCase()}\r\n    className=\"form-control\" \r\n    placeholder={this.props.input} \r\n    name={this.props.input.toLowerCase()}\r\n/>\r\n</div>*/","import React from 'react';\r\nimport './Button.css'\r\n\r\nconst Button = (props) => {\r\n        return (\r\n            <button \r\n                className=\"btn btn-rounded\"\r\n                onClick={props.onClick}\r\n                >\r\n                {props.children}\r\n            </button>\r\n        );\r\n}\r\n\r\nexport default Button","import React, { Component } from 'react'\r\n//import { Link } from 'react-router-dom';\r\nimport './RegistrationLink.css'\r\n\r\nclass RegistrationLink extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"links\">\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegistrationLink","import React, { Component } from 'react';\r\nimport { Link, withRouter} from 'react-router-dom';\r\nimport auth from \"../../routing/auth\"\r\n//import Axios from 'axios';\r\n\r\nimport Panel from '../../components/Panel/Panel';\r\nimport InputField from '../../components/InputField/InputField';\r\nimport Button from '../../components/Button/Button'\r\nimport RegistrationLink from '../../components/RegistrationLink/RegistrationLink';\r\n\r\nimport './LoginPanel.css';\r\n\r\nclass LoginPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user:{\r\n                username:'',\r\n                password: ''\r\n            },\r\n            redirect: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleClearForm = this.handleClearForm.bind(this);\r\n    }\r\n    handleChange(e) {\r\n        let value = e.target.value;\r\n        let name = e.target.name;\r\n        this.setState( prevState => {\r\n           return { \r\n              user : {\r\n                       ...prevState.user, [name]: value\r\n                      }\r\n           }\r\n        }, () => console.log(this.state.user)\r\n        );\r\n    }\r\n\r\n    handleClick(event) {\r\n        event.preventDefault();\r\n        let userData = this.state.user;\r\n        console.log(\"userData\", userData);\r\n\r\n        var url = \"http://138.197.175.92\"\r\n\r\n        fetch(url + \"/frontend/login\",{\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            body: JSON.stringify({\r\n                \"username\": userData.username,\r\n                \"password\": userData.password,\r\n            }), \r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            },\r\n        }).then(response => {\r\n            if (response.status === 200){\r\n                response.json().then(data => {\r\n                console.log(\"Successful\" + JSON.stringify(data));\r\n                \r\n                let sessionTimeout = 1; //hours\r\n                let loginDuration = new Date();\r\n                loginDuration.setTime(loginDuration.getTime() + (sessionTimeout * 60 * 60 * 1000));\r\n                document.cookie = \"CrewCentreSession=Valid; \" + loginDuration.toGMTString() + \"; path=/\";\r\n                let responseData = {\r\n                  username: userData.username,\r\n                  clam_balance: data.clam_balance,\r\n                  admin: data.level === 0 ? true : false,\r\n                  ref_code: data.ref_code\r\n                }\r\n                sessionStorage.setItem(\"data\", JSON.stringify(responseData));\r\n                console.log(\"NAVIGATING\")\r\n               auth.login(() => {\r\n                   this.props.history.push(\"/dashboard\");\r\n               });\r\n                })\r\n            }\r\n            else{\r\n                console.log(\"Failed: \" + response.status)\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(\"error: \" + err);\r\n        })\r\n\r\n    }\r\n\r\n    handleClearForm(e) {\r\n        console.log(\"clear form\");\r\n        e.preventDefault();\r\n        this.setState({\r\n            user:{\r\n                username: '',\r\n                password: ''\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\" id=\"login-panel\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\" id=\"panel\">\r\n                        <Panel>\r\n                            <form>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <InputField type={\"text\"}\r\n                                                    title={\"Username\"}\r\n                                                    name={\"username\"}\r\n                                                    placeholder={\"Username\"}   \r\n                                                    value={this.state.user.username}                                           \r\n                                                    onChange={this.handleChange}                                     \r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                    <InputField type={\"password\"}\r\n                                                    title={\"Password\"}\r\n                                                    name={\"password\"}\r\n                                                    placeholder={\"Password\"}  \r\n                                                    value={this.state.user.password}                                                \r\n                                                    onChange={this.handleChange}                                                                           \r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\" id=\"button\">\r\n                                    <div className=\"col-4 mx-auto\">\r\n                                        <Button  onClick={this.handleClick}>\r\n                                            Login\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                            <div className=\"row\" id=\"registration-links\">\r\n                                <div className=\"col-6\" id=\"sign-up\">\r\n                                    <Link to=\"/signup\"><RegistrationLink>Sign Up</RegistrationLink></Link>\r\n                                </div>\r\n                                <div className=\"col-6\" id=\"forgot\">\r\n                                    <Link to=\"/forgot\"><RegistrationLink>Forgot</RegistrationLink></Link>\r\n                                </div>\r\n                            </div>\r\n                        </Panel>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(LoginPanel);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './SideBar.css'\r\n\r\nclass SideBar extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"col-sm-3 col-md-2 sidebar\" id=\"sidebar\">\r\n                <ul className=\"nav nav-sidebar\">\r\n                    <li className={(this.props.highlight === \"Dashboard\" ? 'active' : '')}><Link to=\"/\">Dashboard <span className=\"sr-only\">(current)</span></Link></li>\r\n                </ul>\r\n                <ul className=\"nav nav-sidebar\">\r\n                    <li className={(this.props.highlight === \"Affiliates\" ? 'active' : '')}><Link to=\"/\">Affiliates</Link></li>\r\n                    <li className={(this.props.highlight === \"Stats\" ? 'active' : '')}><Link to=\"/\">Stats</Link></li>\r\n                    <li className={(this.props.highlight === \"Exchange\" ? 'active' : '')}><Link to=\"/\">Exchange</Link></li>\r\n                </ul>\r\n                <ul className=\"nav nav-sidebar\">\r\n                    <li className={(this.props.highlight === \"CLAM\" ? 'active' : '')}><Link to=\"/\">CLAM</Link></li>\r\n                    <li className={(this.props.highlight === \"BTC\" ? 'active' : '')}><Link to=\"/\">BTC</Link></li>\r\n                    <li className={(this.props.highlight === \"CAD\" ? 'active' : '')}><Link to=\"/\">CAD</Link></li>\r\n                    <li className={(this.props.highlight === \"USD\" ? 'active' : '')}><Link to=\"/\">USD</Link></li>\r\n                    <li className={(this.props.highlight === \"GOLD\" ? 'active' : '')}><Link to=\"/\">GOLD</Link></li>\r\n                </ul>\r\n                <ul className=\"nav nav-sidebar\">\r\n                    <li className={(this.props.highlight === \"Contact\" ? 'active' : '')}><Link to=\"/\">Contact</Link></li>\r\n                    <li className={(this.props.highlight === \"Logout\" ? 'active' : '')}><Link to=\"/\">Logout</Link></li>\r\n                    <li><Link to=\"/\">Refferal Code:</Link></li>\r\n                </ul>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideBar;","import React, { Component } from 'react';\r\nimport SideBar from './SideBar';\r\n\r\nclass MainContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"mainContainer\">\r\n                <div className=\"container-fluid min-vh-100\" id=\"main\">\r\n                    <div className=\"row\">\r\n                        <SideBar highlight={this.props.sidebar}/>\r\n                            {this.props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainContainer;\r\n\r\n","import React, { Component } from 'react';\r\n//import './InvestmentPanel.css'\r\n\r\nclass InvestmentPanel extends Component {\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //  this.dataSource = this.props.dataSource;\r\n        this.state = {\r\n            investments: []\r\n        }\r\n    }/*\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n\r\n        var url = \"http://138.197.175.92\"\r\n        fetch(url + \"/all_investments\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        investments: data\r\n                    });\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"error\");\r\n            });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n*/\r\n    render() {\r\n        return (\r\n            <div className=\"card-responsive shadow p-3 mb-5 bg-white rounded\" id=\"investment-panel\">\r\n                <div className=\"card-body\" id=\"investment-panel\">\r\n                    <div className=\"table-responsive overview-table\">\r\n                        <table className=\"table table-striped\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Investment </td>\r\n                                    <td>amount</td>\r\n                                    <td>balance</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Investment </td>\r\n                                    <td>amount</td>\r\n                                    <td>balance</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Investment </td>\r\n                                    <td>amount</td>\r\n                                    <td>balance</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Investment </td>\r\n                                    <td>amount</td>\r\n                                    <td>balance</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Investment </td>\r\n                                    <td>amount</td>\r\n                                    <td>balance</td>\r\n                                </tr>\r\n                                {/* {this.state.investments.map((element, index) => {\r\n                                    return (\r\n                                        <tr key={element.investments}>\r\n                                            <td>Investment {element.investments}</td>\r\n                                            <td>amount</td>\r\n                                            <td>balance</td>\r\n                                        </tr>\r\n                                    )\r\n                                })} */}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default InvestmentPanel","import React, { Component } from 'react';\r\nimport './Dashboard.css';\r\n//import { Link } from 'react-router-dom';\r\nimport MainContainer from '../../components/MainContainer'\r\nimport InvestmentPanel from '../../components/InvestmentPanel';\r\n\r\nclass Dashboard extends Component {\r\n\r\n    // componentDidMount(){\r\n    //     console.log(sessionStorage.getItem(\"data\").username);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <MainContainer sidebar=\"Dashboard\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                    <InvestmentPanel></InvestmentPanel>\r\n                    </div>\r\n                </div>\r\n            </MainContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nimport Panel from '../../components/Panel/Panel';\r\nimport InputField from '../../components/InputField/InputField';\r\nimport Button from '../../components/Button/Button'\r\nimport RegistrationLink from '../../components/RegistrationLink/RegistrationLink';\r\n\r\nimport './SignUpPanel.css';\r\n\r\nclass SignUpPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newUser: {\r\n                username: '',\r\n                password: '',\r\n                email: '',\r\n                refCode: ''\r\n            }\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleClearForm = this.handleClearForm.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n\r\n        let value = e.target.value;\r\n        let name = e.target.name;\r\n        this.setState(prevState => {\r\n            return {\r\n                newUser: {\r\n                    ...prevState.newUser, [name]: value\r\n                }\r\n            }\r\n        }, () => console.log(\"changed\" + JSON.stringify(this.state.newUser))\r\n        )\r\n\r\n    }\r\n\r\n    handleClick(event) {\r\n        event.preventDefault();\r\n        let userData = this.state.newUser;\r\n\r\n        if (this.stringValidator(userData.username) || this.stringValidator(userData.email)\r\n            || this.stringValidator(userData.password) || this.stringValidator(userData.refCode)) {\r\n            alert(\"Please fill in the form!\");\r\n        }\r\n        else if (this.validateEmail(this.state.newUser.email)) {\r\n            var url = \"http://138.197.175.92\"\r\n\r\n            Axios(url + '/frontend/all_users', {\r\n                method: \"GET\",\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }).then((res) => {\r\n\r\n                console.log(\"Successful\" + JSON.stringify(res));\r\n                //console.log(\"Successful\" + JSON.stringify(data.users[0]));\r\n                let found = false;\r\n\r\n                res.data.users.forEach((data) => {\r\n                    if (data.username === this.state.newUser.username) {\r\n                        found = true;\r\n                        alert(\"Username Taken\");\r\n                        return;\r\n\r\n                    }\r\n                    else if (data.email === this.state.newUser.email) {\r\n                        found = true;\r\n                        alert(\"Email Taken\");\r\n                        return;\r\n                    }\r\n                })\r\n\r\n                if (!found) {\r\n                    fetch(url + \"/frontend/signup\", {\r\n                        method: \"POST\",\r\n                        mode: \"cors\",\r\n                        body: JSON.stringify({\r\n                            \"username\": userData.username,\r\n                            \"email\": userData.email,\r\n                            \"password\": userData.password,\r\n                            \"code\": userData.refCode\r\n                        }), // string or object\r\n                        headers: {\r\n                            'Content-Type': \"application/json\"\r\n                        }\r\n                    }).then((res) => {\r\n                        if (res.status !== 200) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            res.json().then((data)=>{\r\n                                console.log(\"Successful\" + JSON.stringify(data));\r\n                            })\r\n                            //console.log(\"Successful\" + JSON.stringify(data.users[0]));\r\n                            alert(\"Verification e-mail sent. Check your inbox to confirm your account, (might go to your junk folder)\")\r\n                        };\r\n                    }).catch((err) => {\r\n                        console.log(err)\r\n                    })\r\n                }\r\n            }).catch((error) => {\r\n                    console.log(\"Unable to sign up \" + error);\r\n                })\r\n        }\r\n        else {\r\n            alert(\"Enter a valid email\");\r\n        }\r\n    }\r\n\r\n    //Resetting state to default\r\n    handleClearForm(e) {\r\n        console.log(\"clear form\");\r\n        e.preventDefault();\r\n        this.setState({\r\n            newUser: {\r\n                username: '',\r\n                password: '',\r\n                email: '',\r\n                refCode: ''\r\n            }\r\n        })\r\n    }\r\n\r\n    validateEmail(email) {\r\n        let re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        return re.test(email)\r\n    }\r\n\r\n    stringValidator(string) {\r\n        return string.trim() === \"\" || string == null || string === \"username\" || string === \"pass\" || string === \"code\"\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\" id=\"signup-panel\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\" id=\"panel\">\r\n                        <Panel>\r\n                            <form>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <InputField type={\"text\"}\r\n                                            title={\"Username\"}\r\n                                            name={\"username\"}\r\n                                            placeholder={\"Username\"}\r\n                                            value={this.state.newUser.username}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <InputField type={\"password\"}\r\n                                            title={\"Password\"}\r\n                                            name={\"password\"}\r\n                                            placeholder={\"Password\"}\r\n                                            value={this.state.newUser.password}\r\n                                            onChange={this.handleChange}\r\n\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <InputField type={\"email\"}\r\n                                            title={\"Email\"}\r\n                                            name={\"email\"}\r\n                                            placeholder={\"Email\"}\r\n                                            value={this.state.newUser.email}\r\n                                            onChange={this.handleChange}\r\n\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <InputField type={\"text\"}\r\n                                            title={\"Refferal Code\"}\r\n                                            name={\"refCode\"}\r\n                                            placeholder={\"Refferal Code\"}\r\n                                            value={this.state.newUser.refCode}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\" id=\"button\">\r\n                                    <div className=\"col-4 mx-auto\">\r\n                                        <Button onClick={this.handleClick}>\r\n                                            Sign Up\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                            <div className=\"row\" id=\"registration-links\">\r\n                                <div className=\"col-6\" id=\"login\">\r\n                                    <Link to=\"/\"><RegistrationLink>Login</RegistrationLink></Link>\r\n                                </div>\r\n                                <div className=\"col-6\" id=\"forgot\">\r\n                                    <Link to=\"/forgot\"><RegistrationLink>Forgot</RegistrationLink></Link>\r\n                                </div>\r\n                            </div>\r\n                        </Panel>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUpPanel;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nimport Panel from '../../components/Panel/Panel';\r\nimport InputField from '../../components/InputField/InputField';\r\nimport Button from '../../components/Button/Button'\r\nimport RegistrationLink from '../../components/RegistrationLink/RegistrationLink';\r\n\r\nimport './Forgot.css';\r\n\r\nclass Forgot extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                email: ''\r\n            }\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleClearForm = this.handleClearForm.bind(this);\r\n    }\r\n    handleChange(e) {\r\n        let value = e.target.value;\r\n        let name = e.target.name;\r\n        this.setState(prevState => {\r\n            return {\r\n                user: {\r\n                    ...prevState.user, [name]: value\r\n                }\r\n            }\r\n        }, () => console.log(this.state.user)\r\n        )\r\n    }\r\n\r\n    validateEmail(email) {\r\n        let re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        return re.test(email)\r\n    }\r\n\r\n    handleClick(event) {\r\n        event.preventDefault();\r\n        //  let userData = this.state.user;\r\n        var url = \"http://138.197.175.92\"\r\n        \r\n        if (this.validateEmail(this.state.user.email)) {\r\n\r\n            Axios(url + \"/frontend/reset_password\", {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                body: JSON.stringify({\r\n                    \"email\": this.state.user.email\r\n                }), // string or object\r\n                headers: {\r\n                    'Content-Type': \"application/json\"\r\n                }\r\n            }).then((response) => {\r\n                if (response.status !== 200){\r\n                    console.log(\"Email does not exist\");\r\n                    alert(\"Email does not exist\");            }\r\n                else{\r\n                    console.log(\"success: \" + JSON.stringify(response));\r\n                    alert(\"Verification e-mail sent. Check your inbox to confirm your account, (might go to your junk folder)\")\r\n                }\r\n            }).catch((error) => {\r\n                console.log(error);\r\n                alert(\"Cannot reest password\")\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Email in incorrect format!\");\r\n        }\r\n\r\n    }\r\n\r\n    handleClearForm(e) {\r\n        console.log(\"clear form\");\r\n        e.preventDefault();\r\n        this.setState({\r\n            user: {\r\n                email: ''\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\" id=\"forgot-panel\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\" id=\"panel\">\r\n                        <Panel>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <InputField type={\"email\"}\r\n                                        title={\"Email\"}\r\n                                        name={\"email\"}\r\n                                        placeholder={\"Email\"}\r\n                                        value={this.state.user.email}\r\n                                        onChange={this.handleChange}\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" id=\"button\">\r\n                                <div className=\"col-6 mx-auto\">\r\n                                    <Button onClick={this.handleClick}>\r\n                                        Reset Pasword\r\n                                        </Button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" id=\"registration-links\">\r\n                                <div className=\"col-6\" id=\"login\">\r\n                                    <Link to=\"/\"><RegistrationLink>Login</RegistrationLink></Link>\r\n                                </div>\r\n                                <div className=\"col-6\" id=\"sign-up\">\r\n                                    <Link to=\"/signup\"><RegistrationLink>Sign Up</RegistrationLink></Link>\r\n                                </div>\r\n                            </div>\r\n                        </Panel>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Forgot;","import { Route, Redirect } from 'react-router-dom';\r\nimport React from 'react';\r\nimport auth from './auth';\r\n\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route {...rest} render={(props) => (\r\n      auth.isAuthenticated === true\r\n        ? <Component {...props} />\r\n        : <Redirect to='/' />\r\n    )} />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;","import { Route, Switch} from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport LoginPanel from './pages/LoginPanel/LoginPanel'\r\nimport Dashboard from './pages//Dashboard/Dashboard'\r\nimport SignUpPanel from './pages/SignUpPanel/SignUpPanel';\r\nimport Forgot from './pages/Forgot/Forgot';\r\nimport PrivateRoute from './routing/PrivateRoutes';\r\n\r\nclass App extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path='/' render={() => (\r\n          <LoginPanel />\r\n        )} />\r\n  \r\n        <Route exact path='/signup' render={() => (\r\n          <SignUpPanel />\r\n        )} />\r\n        <Route exact path='/forgot' render={() => (\r\n          <Forgot />\r\n        )}/>\r\n       <PrivateRoute exact path='/dashboard' component={Dashboard}/>\r\n       {/* <Route exact path='/dashboard' render={() => (\r\n          <Dashboard />\r\n        )} /> */}\r\n        <Route render={() => (\r\n          <h1>Not Found</h1>\r\n        )} />\r\n      </Switch>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>    \r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}